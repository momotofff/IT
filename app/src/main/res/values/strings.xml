<resources>
    <string name="app_name">IT</string>
    <string name="start_motivation_text">Для меня долгое время было загадкой, как что-то очень дорогое и технологичное может быть столь бесполезным.
                                        И вскоре я осознал, что компьютер — это глупая машина, обладающая способностями выполнять невероятно умные вещи,
                                        тогда как программисты — это умные люди, у которых талант делать невероятные глупости. Короче, они нашли друг друга.
                                                                     Bill Bryson</string>
    <string name="start">НАЧАТЬ</string>
    <string name="empty_string"> </string>
    <string name="startbutton">start</string>
    <string name="todo">TODO</string>
    <string-array name="tips_of_the_day">
        <item>Цели тестирования могут отличаться, в зависимости от этапа разработки ПО, на котором оно проводится.
                                К примеру, на этапе кодирования целью тестирования будет вызов как можно большего количества сбоев в
                                работе программы, что позволит локализовать и исправить дефекты. В то же время, при приемочном тестировании
                                необходимо  показать, что система работает правильно. В период сопровождения, тестирование в основном
                                необходимо для того, чтобы  убедится в отсутствии новых багов, появившихся во время внесения изменений.</item>

        <item>Тестирование позволяет находить и исправлять дефекты,  тем самым снижая уровень риска и повышая качество продукта.
                                Проверяются, в том числе, и места пользовательского интерфейса, где пользователь может сделать ошибку или
                                неправильно понять вывод программы, а также устойчивость системы к злонамеренным действиям.</item>

        <item>В силу своей деятельности, тестировщики занимаются оценкой чужой работы, находят в ней недостатки,
                                что часто воспринимается как деструктивная деятельность, несмотря на то, что ее результатом становится
                                исправление ошибок и улучшение общего качества продукта. Хороший тестировщик должен обладать рядом личных и
                                профессиональных качеств: он должен быть любопытным, критичным, внимательным к деталям, коммуникативным, сохранять
                                профессиональный пессимизм и иметь достаточный опыт для построения предположений о возможных источниках ошибок.</item>

        <item>Тестировщик, в отличие от программиста, главная цель которого – создать работающий продукт, должен уметь найти все
                                заложенные в этом продукте недостатки. А для этого мы должны, прежде всего, сконцентрироваться на том, что может
                                пойти не так. Исследования показали, что, если человек, тестирующий программу, воспринимает ее как  работающую
                                правильно, он найдет меньше ошибок, чем тот, кто будет уверен в наличии в ней множества недостатков.</item>

        <item>Миф о тестировании №1 (Тестирование слишком дорогое). Как говорится: «Не хочешь платить за тестирование в процессе
                                разработки – придется заплатить за тех. поддержку и исправления после релиза». Раннее тестирование помогает
                                сэкономить средства, в то время как отказ или пренебрежение тестированием могут самым печальным образом отразиться
                                на качестве Вашего продукта.</item>

        <item>Миф о тестировании №2 (Тестирование занимает много времени). Само по себе тестирование (при условии грамотной
                                организации производственных процессов) идет параллельно с разработкой, поэтому говорить о затратах времени именно
                                на тестирование можно с натяжкой. Правда в том, что исправление ошибок, найденных в процессе тестирования, требует
                                времени и усилий – но ведь и результатом этих усилий станет повышение качества продукта.</item>

        <item>Миф о тестировании №3 (Тестируются только готовые продукты). Без сомнений, тестирование зависит от написанного кода.
                                Но ведь есть еще тестирование требований и создание тестовых артефактов, которые могут осуществляться и до создания
                                готовой версии продукта. К тому же, в итеративной модели разработки, процессы тестирования и написания программного
                                кода достаточно независимы.</item>

        <item>Миф о тестировании №4 (Можно полностью протестировать программу). Проблема возникает, когда так думает клиент или
                                менеджер проекта. Это утверждение прямо противоречит второму принципу тестирования, поэтому да, Вы, можете провести
                                множество тестов и обеспечить полное покрытие функционала, но это вовсе не будет означать, что ПО протестировано полностью.
                                Всегда может найтись ошибка, которую Вы пропустили. Поэтому исчерпывающее тестирование невозможно – мы можем только довести
                                качество системы до приемлемого уровня.</item>

        <item>Миф о тестировании №5 (В пропущенных багах виноваты тестировщики). Неправильно обвинять тестировщиков в том, что в приложении
                                остаются баги даже после проведения полного цикла тестирования. Проблема здесь в ограничении сроков, стоимости разработки,
                                а также часто меняющихся требованиях. Тестировщики, как и другие участники процесса разработки, зачастую ограничены во
                                времени и ресурсах, что сказывается на качестве их работы. Поэтому здесь нужно определять приоритеты.</item>

        <item>Миф о тестировании №6 (Тестировщики ответственны за качество продукта). Это очень распространенное заблуждение.
                                В обязанности тестировщиков входит нахождение багов и передача информации о них заинтересованным участникам процесса разработки,
                                после чего последние принимают решение о том, что с этими багами дальше делать – будут ли они исправлены или отложены.</item>
        \

        <item>Миф о тестировании №7 (Единственная задача тестировщика – поиск багов). Из предыдущих разделов Вы уже должны были понять
                                что это далеко не так. В то время как разработчики работают, как правило, с достаточно узкой функциональной областью,
                                тестировщики должны понимать организацию системы в целом. Кроме того, в современных условиях тестировщики зачастую
                                принимают участие не только в тестировании как таковом, но и в процессах обеспечения качества.</item>

        <item>Миф о тестировании №8 (Кто угодно может тестировать программное обеспечение). Сегодня, чтобы стать востребованным специалистом
                                в сфере тестирования программного обеспечения, нужно иметь достаточный уровень подготовки, разбираться в современных тенденциях
                                развития информационных технологий и обладать необходимыми для профессии личностными качествами. Хороший тестировщик,
                                кроме непосредственно сферы тестирования, должен знать основы программирования и владеть английским языком
                                на уровне не ниже Intermediate.</item>

        <item>Большинство специалистов сходятся в мысли, что тестирование нужно начинать еще на этапе составления требований к системе.
                                Хотя тут все будет зависеть от выбранной модели разработки. К примеру, в каскадной модели тестирование проводится на
                                специально выделенном для него этапе. Итерационная же модель позволяет осуществлять тестирование практически
                                параллельно с разработкой нового функционала.</item>

        <item>Серия международных стандартов ISO/IEC 25000, также известных как SQuaRE (System and Software Quality Requirements and Evaluation),
                                определяет характеристики, по которым оценивается качество программного продукта.
                                Обновленный стандарт ISO/IEC 25010 содержит терминологию для определения, измерения и оценки качества систем и программных
                                продуктов. Он представляет восемь характеристик качества программного обеспечения, среди которых: функциональная пригодность,
                                уровень производительности, совместимость, удобство использования, надежность, безопасность, удобство сопровождения,
                                портативность.</item>

        <item>Тест-дизайн — один из этапов процесса тестирования, на котором проектируются и создаются тест-кейсы с определёнными
                                ранее целями тестирования. Перед тем, как начать создавать тест-кейсы, мы должны точно понимать, что мы будем тестировать
                                и какие техники тест-дизайна уместны в данном случае при разработке тест-кейсов. Итак, тест-дизайн или
                                разработка тестов — деятельность по получению или выделению тест-кейсов из определённых тестовых условий.</item>

        <item>Тест-кейс пишется для проверки того или иного свойства или поведения программы. К примеру, может ли пользователь
                                зарегистрироваться, используя валидные данные, или нет? Может пользователь авторизоваться в системе после успешной
                                регистрации или нет? Может ли пользователь успешно произвести покупку, авторизуясь под своими учётными данными или нет?
                                И так далее.</item>

        <item>Свойство качественных тест-кейсов №1 (Правильный технический язык, точность и единообразие формулировок).
                                Это свойство должно применяться и к требованиям, и к тест-кейсам, и к отчётам о дефектах — к любой тестовой
                                документации, применяемой на проекте.</item>

        <item>Свойство качественных тест-кейсов №2 (Баланс между специфичностью и общностью). Тест-кейс считается тем более
                                специфичным, чем более детально в нем расписаны действия, конкретные значения и т.д., т.е., чем в нём больше конкретики.
                                Соответственно, тест-кейс считается тем более общим, чем в нём меньше конкретики.</item>

        <item>Свойство качественных тест-кейсов №3 (Баланс между простотой и сложностью). Здесь надо руководствоваться общей
                                логикой при написании тест-кейсов и стараться придерживаться идеи, что простой тест-кейс оперирует одним
                                объектом (или в нём явно виден главный объект), а также содержит небольшое количество тривиальных действий;
                                сложный тест-кейс оперирует несколькими равноправными объектами и содержит много нетривиальных действий.</item>

        <item>Свойство качественных тест-кейсов №4 (Не избыточность по отношению к другим тест-кейсам). Если обнаруживается
                                несколько тест-кейсов, дублирующих задачи друг друга, лучше всего или удалить все, кроме одного, самого показательного,
                                или перед удалением остальных на их основе доработать выбранный самый показательный тест-кейс.</item>

        <item>Свойство качественных тест-кейсов №5 (Возможность повторного использования). Это свойство редко выполняется для
                                низкоуровневых тест-кейсов, но при создании высокоуровневых можно добиться таких формулировок, при которых: A. Тест-кейс
                                будет пригодным к использованию с различными настройками тестируемого приложения и в различных тестовых окружениях.
                                Б. Тест-кейс практически без изменений можно будет использовать для тестирования аналогичной функциональности в
                                других проектах или других областях приложения.</item>

        <item>Свойство качественных тест-кейсов №6 (Повторяемость). Тест-кейс должен быть сформулирован таким образом,
                                чтобы при многократном повторении он показывал одинаковые результаты. Это связано с недвусмысленностью формулировки
                                шагов – специалист, выполняющий тест-кейс, должен точно понимать каждый раз, что необходимо выполнить и в рамках каких условий.
                                Также шаги не должны приводить к последствиям, которые могут привести к затруднению дальнейшего тестирования
                                (например, удалить базу данных).</item>

        <item>Свойство качественных тест-кейсов №7 (Ожидаемый результат для каждого шага тест-кейса). Бывает, встречаются тест-кейсы,
                                в которых ожидаемый результат указывается только после последнего шага. Эта методика написания тест-кейсов снижает их
                                эффективность, поскольку отсутствие результатов для первых шагов не дает чёткого понимания, как должно вести себя
                                приложение или программа при их прохождении.</item>
    </string-array>
    <string name="in_development">В разработке</string>
    <string name="TestGoals">Цели тестирования</string>
    <string name="TestersVocabulary">Словарь тестировщика</string>
    <string name="costOfDefects">Сколько стоят дефекты</string>
    <string name="PsychologyOfTesting">Психология тестирования</string>
    <string name="TestingPrinciples">Принципы тестирования</string>
    <string name="WhereDoErrorsComeFrom">Откуда берутся ошибки</string>
    <string name="WhoIsTesting">Кто занимается тестированием</string>
    <string name="startAndExit">Когда начинать и заканчивать</string>
    <string name="WhatIsSoftwareTesting">Что такое тестирование ПО</string>
    <string name="testGoals">Цели тестирования</string>
    <string name="fundamentalProcess">Фундаментальный процесс</string>
    <string name="webTesting">Тестирование веб-проектов</string>
    <string name="roleOfTesting">Роль тестирования</string>
    <string name="whyTestingIsNecessary">Почему тесты необходимы</string>
    <string name="softwareQuality">Качество ПО (ISOIEC 25010)</string>
    <string name="verificationAndValidation">Верификация и валидация</string>
</resources>